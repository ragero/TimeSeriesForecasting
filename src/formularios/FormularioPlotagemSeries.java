/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.data.time.Month;
import org.jfree.data.time.Day;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.joda.time.DateTime;
import structures.Item;

/**
 *
 * @author rafael
 */
public class FormularioPlotagemSeries extends javax.swing.JInternalFrame {

    
    private static TimeSeriesCollection dataset;
    private static JFreeChart chart;
    private static ArrayList<Item> serieReferencia;     
    
    public FormularioPlotagemSeries() {
        initComponents();
        this.setLocale(Locale.UK);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tCaminho = new javax.swing.JTextField();
        bCarregar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        pGraphic = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Plotagem das Séries");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dataset (CSV)"));

        bCarregar.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        bCarregar.setText("Carregar");
        bCarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCarregarActionPerformed(evt);
            }
        });

        jButton1.setText("Procurar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tCaminho)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(488, 488, 488)
                .addComponent(bCarregar, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(bCarregar)
                .addContainerGap())
        );

        pGraphic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout pGraphicLayout = new javax.swing.GroupLayout(pGraphic);
        pGraphic.setLayout(pGraphicLayout);
        pGraphicLayout.setHorizontalGroup(
            pGraphicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1078, Short.MAX_VALUE)
        );
        pGraphicLayout.setVerticalGroup(
            pGraphicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 517, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel1.setText("Gráficos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1106, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pGraphic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 703, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(23, 23, 23)
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(pGraphic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCarregarActionPerformed
        //Carregando a Série Temporal
        FormularioResultados.getTResultados().setText("");

        lerDataset();
        criarChart();

        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setDomainZoomable(true);
        pGraphic.removeAll();
        pGraphic.setLayout(new FlowLayout());
        
        //chartPanel.setPreferredSize(pGraphic.getSize());
        chartPanel.setPreferredSize(new Dimension(pGraphic.getSize().width - 15,pGraphic.getSize().height - 14));
        pGraphic.add(chartPanel);
        this.pack();

        //Exibindo a Série Temporal
    }//GEN-LAST:event_bCarregarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser open = new JFileChooser();
        open.setFileSelectionMode(open.FILES_ONLY);
        open.setDialogTitle("Abrir");
        open.setDialogType(open.SAVE_DIALOG);
        open.setFileFilter(new FileNameExtensionFilter("Comma-Separated Values (*.csv)", "csv"));
        open.showOpenDialog(null);
        
        File file = open.getSelectedFile();
        if(file != null && file.getAbsolutePath().length() != 0){
            tCaminho.setText(file.getAbsolutePath());
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    public void lerDataset(){
        
        dataset = new TimeSeriesCollection();
        serieReferencia = new ArrayList<Item>();
        
        TimeSeries s1 = new TimeSeries("Série Temporal de Referência", Day.class);
        
        try{
            BufferedReader entrada = new BufferedReader(new FileReader(tCaminho.getText()));
            entrada.readLine();
            String linha = "";
            while( (linha = entrada.readLine()) != null ){
                String[] partes = linha.split(";");
                String[] partesData = partes[0].split("/");
                if(partesData.length != 1){
                    s1.add(new Day(Integer.parseInt(partesData[2]),Integer.parseInt(partesData[1]),Integer.parseInt(partesData[0])), Double.parseDouble(partes[1]));
                    serieReferencia.add(new Item(new DateTime(Integer.parseInt(partesData[0]),Integer.parseInt(partesData[1]),Integer.parseInt(partesData[2]),1,1,1), Double.parseDouble(partes[1])));
                }
            }
            
        }catch(Exception e){
            System.err.println("Erro ao ler o arquivo");
            e.printStackTrace();
        }
        
        dataset.addSeries(s1);
    }
    
    public void criarChart(){
        
        File file = new File(tCaminho.getText());
        chart = ChartFactory.createTimeSeriesChart(file.getName(),"Data", "Valor", dataset, true, true, false);

        chart.setBackgroundPaint(Color.white);

//        final StandardLegend sl = (StandardLegend) chart.getLegend();
//        sl.setDisplaySeriesShapes(true);

        final XYPlot plot = chart.getXYPlot();
        plot.setBackgroundPaint(Color.lightGray);
        plot.setDomainGridlinePaint(Color.white);
        plot.setRangeGridlinePaint(Color.white);
//        plot.setAxisOffset(new Spacer(Spacer.ABSOLUTE, 5.0, 5.0, 5.0, 5.0));
        plot.setDomainCrosshairVisible(true);
        plot.setRangeCrosshairVisible(true);
        
        final XYItemRenderer renderer = plot.getRenderer();
        if (renderer instanceof StandardXYItemRenderer) {
            final StandardXYItemRenderer rr = (StandardXYItemRenderer) renderer;
            rr.setShapesFilled(true);
            rr.setItemLabelsVisible(true);
        }
        
        final DateAxis axis = (DateAxis) plot.getDomainAxis();
        axis.setDateFormatOverride(new SimpleDateFormat("MMM-yyyy"));
        
    }
    
    public static TimeSeriesCollection getDataset(){
        return dataset;
    }
            
    public static JFreeChart getChart(){
        return chart;
    }
    
    public static ArrayList<Item> getSerieReferencia(){
        return serieReferencia;
    }     
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCarregar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pGraphic;
    private javax.swing.JTextField tCaminho;
    // End of variables declaration//GEN-END:variables
}
